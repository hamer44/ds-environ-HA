# Calculate the p-value for mean body size in the control group
observed_mature_value <- observed_means$mean_body_size[observed_means$SiteStatus == "mature"]
randomized_control_values <- randomized.comms$mean_body_size[randomized.comms$shuffled_treatment == "mature"]
# Count the number of randomized values less than or equal to the observed value
p_value_body_size_mature <- sum(randomized_control_values <= observed_mature_value) / length(randomized_mature_values)
# Calculate the p-value for mean body size in the control group
observed_mature_value <- observed_means$mean_body_size[observed_means$SiteStatus == "mature"]
randomized_mature_values <- randomized.comms$mean_body_size[randomized.comms$shuffled_treatment == "mature"]
# Count the number of randomized values less than or equal to the observed value
p_value_body_size_mature <- sum(randomized_control_values <= observed_mature_value) / length(randomized_mature_values)
p_value_body_size_mature
# Calculate the p-value for mean body size in the control group
observed_mature_value <- observed_means$mean_body_size[observed_means$SiteStatus == "mature"]
randomized_mature_values <- randomized.comms$mean_body_size[randomized.comms$shuffled_treatment == "mature"]
# Count the number of randomized values less than or equal to the observed value
p_value_body_size_mature <- sum(randomized_mature_values <= observed_mature_value) / length(randomized_mature_values)
p_value_body_size_mature
observed_means
randomized.comms
# Calculate the p-value for mean body size in the control group
observed_mature_value <- observed_means$mean_body_size[observed_means$SiteStatus == "mature"]
randomized_mature_values <- randomized.comms$mean_body_size[randomized.comms$shuffled_treatment == "mature"]
# Count the number of randomized values less than or equal to the observed value
p_value_body_size_mature <- sum(randomized_mature_values <= observed_mature_value) / length(randomized_mature_values)
p_value_body_size_mature
#p-value for mean body size
p_value_body_size_mature <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "mature"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "mature"]
/nrow(randomized.comms))
p_value_body_size_mature
# Calculate the p-value for mean body size in the control group
observed_mature_value <- observed_means$mean_body_size[observed_means$SiteStatus == "mature"]
randomized_mature_values <- randomized.comms$mean_body_size[randomized.comms$shuffled_treatment == "mature"]
# Count the number of randomized values less than or equal to the observed value
p_value_body_size_mature <- sum(randomized_mature_values <= observed_mature_value) / length(randomized_mature_values)
p_value_body_size_mature
#p-value for mean body size
p_value_body_size_control <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "control"]
/(nrow(randomized.comms)))
p_value_body_size_control
# Calculate the p-value for mean body size in the control group
observed_control_value <- observed_means$mean_body_size[observed_means$SiteStatus == "control"]
randomized_control_values <- randomized.comms$mean_body_size[randomized.comms$shuffled_treatment == "control"]
# Count the number of randomized values less than or equal to the observed value
p_value_body_size_control <- sum(randomized_control_values <= observed_control_value) / length(randomized_control_values)
p_value_body_size_control
randomized.comms
observed_means
p_value_body_size_control <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "control"])
p_value_body_size_control
nrow(randomized.comms
#p-value for mean body size
p_value_body_size_control <- sum(randomized.comms$mean_body_size
p_value_body_size_control <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "control"]
/(length(randomized.comms)))
p_value_body_size_control
p_value_body_size_control <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "control"])
p_value_body_size_control
randomized.comms
#p-value for mean body size
p_value_body_size_control <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "control"]
/200)
p_value_body_size_control
p_value_body_size_control <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "control"])
p_value_body_size_control
#p-value for mean body size
p_value_body_size_control <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "control"]
/200)
round(p_value_body_size_control, digits = 3)
p_value_body_size_control
# Calculate the p-value for mean body size in the control group
observed_control_value <- observed_means$mean_body_size[observed_means$SiteStatus == "control"]
randomized_control_values <- randomized.comms$mean_body_size[randomized.comms$shuffled_treatment == "control"]
# Count the number of randomized values less than or equal to the observed value
p_value_body_size_control <- sum(randomized_control_values <= observed_control_value) / length(randomized_control_values)
p_value_body_size_control
p_value_body_size_control <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "control"]
/200)
round(p_value_body_size_control, digits = 3)
p_value_body_size_control
randomized.comms
p_value_body_size_control <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "control"]
/nrow(randomized.comms))
p_value_body_size_control
p_value_body_size_control <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "control"])
p_value_body_size_control
p_value_body_size_control <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "control"])/nrow(randomized.comms)
p_value_body_size_control
#p-value for mean body size (mature)
p_value_body_size_mature <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "mature"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "mature"])/nrow(randomized.comms)
p_value_body_size_mature
p_value_body_size_mature <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "mature"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "mature"])
p_value_body_size_mature
# Load necessary libraries in R
library(ggplot2)
library(dplyr, warn.conflicts = FALSE)
library(readr)
library(tidyr)
# For reproducibility purposes
set.seed(123)
## read in the specimen data
spec <- read.csv("specimens-complete.csv")
## explore the columns
str(spec)
unique(spec$Order)
unique(spec$Family)
sort(unique(spec$GenusSpecies))
bee.families <- c("Halictidae", "Megachilidae", "Apidae", "Colletidae", "Andrenidae","Melittidae")
spec <- spec %>%
filter(Family %in% bee.families & Species != "")
head(spec)
## The dimensions of the subsetted data should be 99097 by 40
dim(spec)
unique(spec$SiteStatus)
unique(spec$Se)
unique(spec$NetPan)
spec <- spec %>%
filter((SiteStatus == "control" | SiteStatus == "mature") &
NetPan == "net" &
Sex == "f")
## The dimensions of the subsetted data should be 8810 by 40.
dim(spec)
## let's drop all the random columns we don't care about
spec <- spec %>%
select(UniqueID, GenusSpecies, Site, SiteStatus, Year)
spec
## load the traits table, this includes traits for all the bees
traits <- read.csv("bee.csv")
str(traits)
inner.join <- inner_join(traits, spec)
inner.join
left.join <- left_join(spec, traits)
left.join
right.join <- right_join(spec, traits)
right.join
full.join <- full_join(spec, traits)
full.join
traits.v2 <- traits %>%
select(GenusSpecies, MeanITD, d)
spec.traits <- right_join(traits.v2, spec)
## The dimensions should be 8810    7
dim(spec.traits)
spec.traits
sum(is.na(spec.traits$MeanITD))
missing_species <- spec.traits %>%
filter(is.na(MeanITD)) %>%
select(GenusSpecies, MeanITD)
missing_species
spec.traits <- spec.traits %>%
filter(MeanITD != "NA")
## The dimensions should be 8634 7
dim(spec.traits)
sys.traits <- spec.traits %>%
group_by(Site, Year, SiteStatus) %>%
summarize(
avg_body_size = mean(MeanITD, na.rm = TRUE),
avg_specialization = mean(d, na.rm = TRUE)
)
sys.traits
## body size
ggplot(sys.traits, aes(x = avg_body_size)) +
geom_histogram()
## Specialization
ggplot(sys.traits, aes(x = avg_specialization)) +
geom_histogram()
## Let's pick 2013, it was a nice year.
sys.traits2013 <- sys.traits %>%
filter(Year == 2013)
shuffled_treatment <- sample(sys.traits2013$SiteStatus)
library(dplyr)
sys.traits2013 <- sys.traits2013 %>%
ungroup() %>%
mutate(shuffled_treatment = shuffled_treatment[1:n()])
mean_trait_value <- sys.traits2013 %>%
group_by(shuffled_treatment) %>%
summarize(mean_specialization = mean(avg_specialization, na.rm = TRUE))
#This function is for looking at the control vs hedgerow plots for bee presence. We shuffled the treatment column within a year to create a null distribution, then added this column back to the dataframe.Then we calculate the mean values for each treatment type so they can be compared.
randomizeTraits <- function(yr, sys.traits) {
#subset to year
year_filter <- filter(sys.traits, Year == yr)
# Shuffle the treatment column
shuffled_treatment <- sample(year_filter$SiteStatus, nrow(year_filter), replace = FALSE)
# Add the shuffled treatment column to the df
year_filter$shuffled_treatment <- shuffled_treatment
# Calculate mean specialization values for each shuffled treatment group
mean_trait_value <- year_filter %>%
group_by(shuffled_treatment, Year) %>%
summarize(mean_specialization = mean(avg_specialization, na.rm = TRUE),
avg_body_size = mean(avg_body_size, na.rm = TRUE))
return(mean_trait_value)
}
# result
result <- randomizeTraits(2013, sys.traits2013)
# result
result <- randomizeTraits(2013, sys.traits2013)
result
years <- sort(unique(sys.traits$Year))
random.traits <- randomizeTraits(years[1], sys.traits)
# Loop through remaining years
for (yr in years[-1]) {
yearly_data <- randomizeTraits(yr = yr, sys.traits)
random.traits <- rbind(random.traits, yearly_data)
}
dim(random.traits)
mean.years <- random.traits %>%
group_by(
shuffled_treatment) %>%
summarize(avg_body_size = mean(avg_body_size, na.rm = TRUE),
mean_specialization = mean(mean_specialization, na.rm = TRUE),
.groups = "drop")
mean.years
repRandomComm <- function(years, sys.traits) {
# Initialize with the first year’s data
random.traits <- randomizeTraits(years[1], sys.traits %>% filter(Year == years[1]))
# Loop over remaining years, applying the randomizeTraits function and row-bind results
for (yr in years[-1]) {
yearly_data <- randomizeTraits(yr, sys.traits %>% filter(Year == yr))
random.traits <- rbind(random.traits, yearly_data)
}
# Calculate mean body size and specialization
mean.years <- random.traits %>%
group_by(shuffled_treatment) %>%
summarize(mean_body_size = mean(avg_body_size, na.rm = TRUE),
mean_specialization = mean(mean_specialization, na.rm = TRUE))
return(mean.years)
}
result <- repRandomComm(years, sys.traits)
result
# Initialize a dataframe with the format of the output from the first run
randomized.comms <- repRandomComm(years, sys.traits)
# Run the randomization 99 more times and bind each result
for (i in 2:100) {
iteration_result <- repRandomComm(years, sys.traits)
randomized.comms <- rbind(randomized.comms, iteration_result)
}
# View the final dataframe with all 100 iterations combined
print(randomized.comms)
## The dimensions should be 200 3 (two rows are created each iteration)
dim(randomized.comms)
observed_means_byyear <- sys.traits %>%
group_by(Year, Site, SiteStatus) %>%
summarize(mean_body_size = mean(avg_body_size), mean_avg_specialization = mean(avg_specialization))
observed_means <- observed_means_byyear %>%
group_by(SiteStatus) %>%
summarize(mean_body_size = mean(mean_body_size), mean_avg_specialization = mean(mean_avg_specialization))
# Histogram for body size
hist(randomized.comms$mean_body_size, main="Randomized Mean Body Size", xlab="Mean Body Size", col="skyblue", border="white")
abline(v = observed_means$mean_body_size, col = "red", lwd = 2)  #observed data
# Histogram for specialization
hist(randomized.comms$mean_specialization, main="Randomized Mean Specialization", xlab="Mean Specialization (d)", col="skyblue", border="white")
abline(v = observed_means$mean_avg_specialization, col = "red", lwd = 2) #observed data
#p-value for mean body size
p_value_body_size_control <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "control"])/nrow(randomized.comms)
p_value_body_size_control
#p-value for mean body size (mature)
p_value_body_size_mature <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "mature"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "mature"])/nrow(randomized.comms)
p_value_body_size_mature
#p-value for mean body size (mature)
p_value_body_size_mature <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "mature"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "mature"])/nrow(randomized.comms)
p_value_body_size_mature
#p-value for mean body size
p_value_body_size_control <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "control"])/nrow(randomized.comms)
p_value_body_size_control
#p-value for mean body size (mature)
p_value_body_size_mature <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "mature"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "mature"])/nrow(randomized.comms)
p_value_body_size_mature
randomized.comms
observed_mean
observed_means
randomized.comms
randomized.comms
observed_means
randomized.comms
observed_means
#p-value for mean body size
p_value_body_size_control <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "control"])/nrow(randomized.comms)
p_value_body_size_control
#p-value for mean body size (mature)
p_value_body_size_mature <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "mature"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "mature"])/nrow(randomized.comms)
p_value_body_size_mature
randomized.comms
#p-value for mean body size
p_value_body_size_control <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "control"])/nrow(randomized.comms)
p_value_body_size_control
#p-value for mean body size (mature)
p_value_body_size_mature <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "mature"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "mature"])/nrow(randomized.comms)
p_value_body_size_mature
# Histogram for specialization
hist(randomized.comms$mean_specialization, main="Randomized Mean Specialization", xlab="Mean Specialization (d)", col="skyblue", border="white")
abline(v = observed_means$mean_avg_specialization, col = "red", lwd = 2) #observed data
randomized.comms
#p-value for mean specialization
p_value_body_size_control <- sum(randomized.comms$mean_specialization
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_specialization
[observed_means$SiteStatus == "control"])/nrow(randomized.comms)
p_value_body_size_control
#p-value for mean specialization
p_value_specialization_control <- sum(randomized.comms$mean_specialization
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_specialization
[observed_means$SiteStatus == "control"])/nrow(randomized.comms)
p_value_specialization_control
#p-value for mean body size (mature)
p_value_body_size_mature <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "mature"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "mature"])/nrow(randomized.comms)
p_value_body_size_mature
#p-value for mean body size
p_value_body_size_control <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "control"])/nrow(randomized.comms)
p_value_body_size_control
#p-value for mean body size (mature)
p_value_specialization_mature <- sum(randomized.comms$mean_specialization
[randomized.comms$shuffled_treatment == "mature"]
<= observed_means$mean_specialization
[observed_means$SiteStatus == "mature"])/nrow(randomized.comms)
p_value_specialization_mature
randomized.comms
#p-value for mean specialization
p_value_specialization_control <- sum(randomized.comms$mean_specialization
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_specialization
[observed_means$SiteStatus == "control"])/nrow(randomized.comms)
p_value_specialization_control
randomized.comms
observed_means
#p-value for mean specialization
p_value_specialization_control <- sum(randomized.comms$mean_specialization
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_avg_specialization
[observed_means$SiteStatus == "control"])/nrow(randomized.comms)
p_value_specialization_control
#p-value for mean body size (mature)
p_value_specialization_mature <- sum(randomized.comms$mean_specialization
[randomized.comms$shuffled_treatment == "mature"]
<= observed_means$mean_avg_specialization
[observed_means$SiteStatus == "mature"])/nrow(randomized.comms)
p_value_specialization_mature
#p-value for mean specialization (mature)
p_value_specialization_mature <- sum(randomized.comms$mean_specialization
[randomized.comms$shuffled_treatment == "mature"]
<= observed_means$mean_avg_specialization
[observed_means$SiteStatus == "mature"])/nrow(randomized.comms)
p_value_specialization_control
observed_means_byyear <- sys.traits %>%
group_by(Year, Site, SiteStatus) %>%
summarize(mean_body_size = mean(avg_body_size), mean_avg_specialization = mean(avg_specialization))
observed_means <- observed_means_byyear %>%
group_by(SiteStatus) %>%
summarize(mean_body_size = mean(mean_body_size), mean_avg_specialization = mean(mean_avg_specialization))
# Histogram for body size
hist(randomized.comms$mean_body_size, main="Randomized Mean Body Size", xlab="Mean Body Size", col="skyblue", border="white")
abline(v = observed_means$mean_body_size, col = "red", lwd = 2)  #observed data
#p-value for mean body size
p_value_body_size_control <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "control"])/nrow(randomized.comms)
p_value_body_size_control
#p-value for mean body size (mature)
p_value_body_size_mature <- sum(randomized.comms$mean_body_size
[randomized.comms$shuffled_treatment == "mature"]
<= observed_means$mean_body_size
[observed_means$SiteStatus == "mature"])/nrow(randomized.comms)
p_value_body_size_mature
# Histogram for specialization
hist(randomized.comms$mean_specialization, main="Randomized Mean Specialization", xlab="Mean Specialization (d)", col="skyblue", border="white")
abline(v = observed_means$mean_avg_specialization, col = "red", lwd = 2) #observed data
#p-value for mean specialization
p_value_specialization_control <- sum(randomized.comms$mean_specialization
[randomized.comms$shuffled_treatment == "control"]
<= observed_means$mean_avg_specialization
[observed_means$SiteStatus == "control"])/nrow(randomized.comms)
p_value_specialization_control
#p-value for mean specialization (mature)
p_value_specialization_mature <- sum(randomized.comms$mean_specialization
[randomized.comms$shuffled_treatment == "mature"]
<= observed_means$mean_avg_specialization
[observed_means$SiteStatus == "mature"])/nrow(randomized.comms)
p_value_specialization_control
#p-value for mean specialization (mature)
p_value_specialization_mature <- sum(randomized.comms$mean_specialization
[randomized.comms$shuffled_treatment == "mature"]
>= observed_means$mean_avg_specialization
[observed_means$SiteStatus == "mature"])/nrow(randomized.comms)
p_value_specialization_control
library(terra)
library(ggplot2)
library(dplyr)
library(sf) ## new package for vector data
aoi_boundary_HARV <- st_read(
"data/NEON-DS-Site-Layout-Files/HARV/HarClip_UTMZ18.shp")
st_geometry_type(aoi_boundary_HARV)
crs(aoi_boundary_HARV, proj=TRUE)
st_crs(aoi_boundary_HARV)
st_bbox(aoi_boundary_HARV) # or
ext(aoi_boundary_HARV)
aoi_boundary_HARV
ggplot() +
geom_sf(data = aoi_boundary_HARV, size = 3, color = "black", fill = "cyan1") +
ggtitle("AOI Boundary Plot")
lines_HARV <- st_read("data/NEON-DS-Site-Layout-Files/HARV/HARV_roads.shp")
point_HARV <- st_read("data/NEON-DS-Site-Layout-Files/HARV/HARVtower_UTM18N.shp")
class(lines_HARV)
class(point_HARV)
crs(lines_HARV, proj=TRUE)
ext(lines_HARV)
crs(point_HARV, proj=TRUE)
ext(point_HARV)
ggplot() +
geom_sf(data = aoi_boundary_HARV, size = 3, color = "black", fill = "cyan1") +
geom_sf(data = lines_HARV) +
geom_sf(data = point_HARV) +
ggtitle("Survey site map")
library(terra)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(sf)
rebel_sbs <- rast("/Users/holly/Desktop/5-OR-fires/soil-burn-severity/2017_rebel_sbs")
terwilliger_sbs <- rast("/Users/holly/Desktop/5-OR-fires/soil-burn-severity/2018_terwilliger_sbs")
terwilliger_sbs <- rast("/Users/holly/Desktop/5-OR-fires/soil-burn-severity/2018_terwilliger_sbs.tif")
get.wd
getwd
getwd
setwd("~/Desktop/5-OR-fires")
terwilliger_sbs <- rast("/Users/holly/Desktop/5-OR-fires/soil-burn-severity/2018_terwilliger_sbs.tif")
terwilliger_sbs <- rast("soil-burn-severity/2018_terwilliger_sbs.tif")
terwilliger_sbs <- rast("soil-burn-severity/2018_terwilliger_sbs./SoilSeverity.tif")
setwd("~/Desktop/5-OR-fires")
terwilliger_sbs <- rast("soil-burn-severity/2018_terwilliger_sbs/SoilSeverity.tif")
beachiecreek_sbs <- rast("soil-burn-severity/2020_beachiecreek_sbs/BeachieBreel/SBS_final.tif")
terwilliger_sbs <- rast("soil-burn-severity/2018_terwilliger_sbs/SoilSeverity.tif")
beachiecreek_sbs <- rast("soil-burn-severity/2020_beachiecreek_sbs/Beach.tif")
terwilliger_sbs <- rast("soil-burn-severity/2018_terwilliger_sbs/SoilSeverity.tif")
beachiecreek_sbs <- rast("soil-burn-severity/2020_beachiecreek_sbs/BeachieCreek_SBS_final.tif")
holidayfarm_sbs <-  rast("soil-burn-severity/2020_holidayfarm_sbs/HolidayFarm_SBS_final.tif")
summary(terwilliger_sbs)
summary(beachiecreek_sbs)
summary(holidayfarm_sbs)
